2023/04/18 18:13:10 mysql.go:37: successfully connected to mysql :ent:ent@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 18:13:10 mysql.go:69: failed creating atlas migration directory: sql/migrate: stat ent/migrate/migrations: no such file or directory
2023/04/18 18:21:45 mysql.go:37: successfully connected to mysql :ent:ent@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 18:21:45 mysql.go:80: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 18:21:46 mysql.go:93: migration failed count: 1
2023/04/18 18:21:47 mysql.go:93: migration failed count: 2
2023/04/18 18:21:48 mysql.go:93: migration failed count: 3
2023/04/18 18:21:49 mysql.go:93: migration failed count: 4
2023/04/18 18:21:50 mysql.go:93: migration failed count: 5
2023/04/18 18:21:51 mysql.go:93: migration failed count: 6
2023/04/18 18:21:52 mysql.go:93: migration failed count: 7
2023/04/18 18:21:53 mysql.go:93: migration failed count: 8
2023/04/18 18:21:54 mysql.go:93: migration failed count: 9
2023/04/18 18:21:55 mysql.go:93: migration failed count: 10
2023/04/18 18:21:56 mysql.go:93: migration failed count: 11
2023/04/18 18:21:57 mysql.go:93: migration failed count: 12
2023/04/18 18:21:58 mysql.go:93: migration failed count: 13
2023/04/18 18:21:59 mysql.go:93: migration failed count: 14
2023/04/18 18:22:00 mysql.go:93: migration failed count: 15
2023/04/18 18:22:01 mysql.go:93: migration failed count: 16
2023/04/18 18:22:02 mysql.go:93: migration failed count: 17
2023/04/18 18:22:04 mysql.go:93: migration failed count: 18
2023/04/18 18:22:05 mysql.go:93: migration failed count: 19
2023/04/18 18:22:06 mysql.go:93: migration failed count: 20
2023/04/18 18:22:07 mysql.go:93: migration failed count: 21
2023/04/18 18:22:08 mysql.go:93: migration failed count: 22
2023/04/18 18:22:09 mysql.go:93: migration failed count: 23
2023/04/18 18:22:10 mysql.go:93: migration failed count: 24
2023/04/18 18:22:11 mysql.go:93: migration failed count: 25
2023/04/18 18:22:12 mysql.go:93: migration failed count: 26
2023/04/18 18:22:13 mysql.go:93: migration failed count: 27
2023/04/18 18:22:14 mysql.go:93: migration failed count: 28
2023/04/18 18:22:15 mysql.go:93: migration failed count: 29
2023/04/18 18:22:16 mysql.go:93: migration failed count: 30
2023/04/18 18:22:17 mysql.go:93: migration failed count: 31
2023/04/18 18:22:17 mysql.go:95: failed creating schema resources: mysql: query system variables: dial tcp :3306: connect: connection refused
2023/04/18 19:04:22 mysql.go:37: successfully connected to mysql :ent:ent@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 19:04:22 mysql.go:80: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 19:04:23 mysql.go:93: migration failed count: 1
2023/04/18 19:04:24 mysql.go:93: migration failed count: 2
2023/04/18 19:04:25 mysql.go:93: migration failed count: 3
2023/04/18 19:04:26 mysql.go:93: migration failed count: 4
2023/04/18 19:04:27 mysql.go:93: migration failed count: 5
2023/04/18 19:04:28 mysql.go:93: migration failed count: 6
2023/04/18 19:04:29 mysql.go:93: migration failed count: 7
2023/04/18 19:04:30 mysql.go:93: migration failed count: 8
2023/04/18 19:04:31 mysql.go:93: migration failed count: 9
2023/04/18 19:04:32 mysql.go:93: migration failed count: 10
2023/04/18 19:04:33 mysql.go:93: migration failed count: 11
2023/04/18 19:04:34 mysql.go:93: migration failed count: 12
2023/04/18 19:04:35 mysql.go:93: migration failed count: 13
2023/04/18 19:04:36 mysql.go:93: migration failed count: 14
2023/04/18 19:04:37 mysql.go:93: migration failed count: 15
2023/04/18 19:04:38 mysql.go:93: migration failed count: 16
2023/04/18 19:04:39 mysql.go:93: migration failed count: 17
2023/04/18 19:04:40 mysql.go:93: migration failed count: 18
2023/04/18 19:04:41 mysql.go:93: migration failed count: 19
2023/04/18 19:04:42 mysql.go:93: migration failed count: 20
2023/04/18 19:04:43 mysql.go:93: migration failed count: 21
2023/04/18 19:04:44 mysql.go:93: migration failed count: 22
2023/04/18 19:04:45 mysql.go:93: migration failed count: 23
2023/04/18 19:04:46 mysql.go:93: migration failed count: 24
2023/04/18 19:04:47 mysql.go:93: migration failed count: 25
2023/04/18 19:04:48 mysql.go:93: migration failed count: 26
2023/04/18 19:04:49 mysql.go:93: migration failed count: 27
2023/04/18 19:04:50 mysql.go:93: migration failed count: 28
2023/04/18 19:04:51 mysql.go:93: migration failed count: 29
2023/04/18 19:04:52 mysql.go:93: migration failed count: 30
2023/04/18 19:04:53 mysql.go:93: migration failed count: 31
2023/04/18 19:04:53 mysql.go:95: failed creating schema resources: mysql: query system variables: dial tcp :3306: connect: connection refused
2023/04/18 19:19:52 mysql.go:37: successfully connected to mysql :ent:ent@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 19:19:52 mysql.go:80: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 19:19:53 mysql.go:93: migration failed count: 1
2023/04/18 19:19:54 mysql.go:93: migration failed count: 2
2023/04/18 19:19:55 mysql.go:93: migration failed count: 3
2023/04/18 19:19:56 mysql.go:93: migration failed count: 4
2023/04/18 19:19:57 mysql.go:93: migration failed count: 5
2023/04/18 19:19:58 mysql.go:93: migration failed count: 6
2023/04/18 19:19:59 mysql.go:93: migration failed count: 7
2023/04/18 19:20:00 mysql.go:93: migration failed count: 8
2023/04/18 19:20:01 mysql.go:93: migration failed count: 9
2023/04/18 19:20:02 mysql.go:93: migration failed count: 10
2023/04/18 19:20:03 mysql.go:93: migration failed count: 11
2023/04/18 19:20:04 mysql.go:93: migration failed count: 12
2023/04/18 19:20:05 mysql.go:93: migration failed count: 13
2023/04/18 19:20:06 mysql.go:93: migration failed count: 14
2023/04/18 19:20:07 mysql.go:93: migration failed count: 15
2023/04/18 19:20:08 mysql.go:93: migration failed count: 16
2023/04/18 19:20:09 mysql.go:93: migration failed count: 17
2023/04/18 19:20:10 mysql.go:93: migration failed count: 18
2023/04/18 19:20:11 mysql.go:93: migration failed count: 19
2023/04/18 19:20:12 mysql.go:93: migration failed count: 20
2023/04/18 19:20:13 mysql.go:93: migration failed count: 21
2023/04/18 19:20:14 mysql.go:93: migration failed count: 22
2023/04/18 19:20:15 mysql.go:93: migration failed count: 23
2023/04/18 19:20:16 mysql.go:93: migration failed count: 24
2023/04/18 19:20:17 mysql.go:93: migration failed count: 25
2023/04/18 19:20:18 mysql.go:93: migration failed count: 26
2023/04/18 19:20:19 mysql.go:93: migration failed count: 27
2023/04/18 19:20:20 mysql.go:93: migration failed count: 28
2023/04/18 19:20:21 mysql.go:93: migration failed count: 29
2023/04/18 19:20:22 mysql.go:93: migration failed count: 30
2023/04/18 19:20:23 mysql.go:93: migration failed count: 31
2023/04/18 19:20:23 mysql.go:95: failed to connection: mysql://ent:ent@:3306/app2
2023/04/18 19:20:23 mysql.go:96: failed creating schema resources: mysql: query system variables: dial tcp :3306: connect: connection refused
2023/04/18 19:38:39 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 19:38:39 mysql.go:80: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 19:38:40 mysql.go:93: migration failed count: 1
2023/04/18 19:38:41 mysql.go:93: migration failed count: 2
2023/04/18 19:38:42 mysql.go:93: migration failed count: 3
2023/04/18 19:38:43 mysql.go:93: migration failed count: 4
2023/04/18 19:38:44 mysql.go:93: migration failed count: 5
2023/04/18 19:38:45 mysql.go:93: migration failed count: 6
2023/04/18 19:38:46 mysql.go:93: migration failed count: 7
2023/04/18 19:38:48 mysql.go:93: migration failed count: 8
2023/04/18 19:38:49 mysql.go:93: migration failed count: 9
2023/04/18 19:38:50 mysql.go:93: migration failed count: 10
2023/04/18 19:38:51 mysql.go:93: migration failed count: 11
2023/04/18 19:38:52 mysql.go:93: migration failed count: 12
2023/04/18 19:38:53 mysql.go:93: migration failed count: 13
2023/04/18 19:38:54 mysql.go:93: migration failed count: 14
2023/04/18 19:38:55 mysql.go:93: migration failed count: 15
2023/04/18 19:38:56 mysql.go:93: migration failed count: 16
2023/04/18 19:38:57 mysql.go:93: migration failed count: 17
2023/04/18 19:38:58 mysql.go:93: migration failed count: 18
2023/04/18 19:38:59 mysql.go:93: migration failed count: 19
2023/04/18 19:39:00 mysql.go:93: migration failed count: 20
2023/04/18 19:39:01 mysql.go:93: migration failed count: 21
2023/04/18 19:39:02 mysql.go:93: migration failed count: 22
2023/04/18 19:39:03 mysql.go:93: migration failed count: 23
2023/04/18 19:39:04 mysql.go:93: migration failed count: 24
2023/04/18 19:39:05 mysql.go:93: migration failed count: 25
2023/04/18 19:39:06 mysql.go:93: migration failed count: 26
2023/04/18 19:39:07 mysql.go:93: migration failed count: 27
2023/04/18 19:39:08 mysql.go:93: migration failed count: 28
2023/04/18 19:39:09 mysql.go:93: migration failed count: 29
2023/04/18 19:39:10 mysql.go:93: migration failed count: 30
2023/04/18 19:39:11 mysql.go:93: migration failed count: 31
2023/04/18 19:39:11 mysql.go:95: failed to connection: mysql://root:root@:3306/app2
2023/04/18 19:39:11 mysql.go:96: failed creating schema resources: mysql: query system variables: dial tcp :3306: connect: connection refused
2023/04/18 19:44:33 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 19:44:33 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 19:44:33 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 19:44:33 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 19:44:33 dialect.go:79: driver.Tx(ec9b1372-b426-430a-8258-2c6dabe441b5): started
2023/04/18 19:44:33 dialect.go:79: Tx(ec9b1372-b426-430a-8258-2c6dabe441b5).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/18 19:44:33 dialect.go:79: Tx(ec9b1372-b426-430a-8258-2c6dabe441b5).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/18 19:44:33 dialect.go:79: Tx(ec9b1372-b426-430a-8258-2c6dabe441b5).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/18 19:44:33 dialect.go:79: Tx(ec9b1372-b426-430a-8258-2c6dabe441b5).Exec: query=CREATE TABLE `groups` (`id` bigint NOT NULL AUTO_INCREMENT, `created_at` timestamp NOT NULL, `updated_at` timestamp NOT NULL, `name` varchar(100) NOT NULL, `description` varchar(100) NOT NULL, PRIMARY KEY (`id`)) CHARSET utf8mb4 COLLATE utf8mb4_bin args=[]
2023/04/18 19:44:33 dialect.go:79: Tx(ec9b1372-b426-430a-8258-2c6dabe441b5): committed
2023/04/18 19:44:33 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:31:23 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:31:23 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 21:31:23 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:31:23 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:31:23 dialect.go:79: driver.Tx(06e832f3-d83e-4498-af9c-81780aacc5fe): started
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/18 21:31:23 dialect.go:79: Tx(06e832f3-d83e-4498-af9c-81780aacc5fe): committed
2023/04/18 21:31:23 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:38:16 group_handler.go:24: /api/groups
2023/04/18 21:38:16 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/18 21:38:16 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/18 21:38:16 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/18 21:38:16 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/18 21:38:19 group_handler.go:24: /api/groups
2023/04/18 21:38:19 dialect.go:79: driver.Exec: query=INSERT INTO `groups` (`created_at`, `updated_at`, `name`, `description`) VALUES (?, ?, ?, ?) args=[2023-04-18 21:38:19.047736886 +0900 JST m=+415.585747941 2023-04-18 21:38:19.047737428 +0900 JST m=+415.585748524 くろグループ 亜jfkdjksjfかdl；fjdかsjf；あ]
2023/04/18 21:38:19 group_repository.go:80: user was created: Group(id=1, created_at=Tue Apr 18 21:38:19 2023, updated_at=Tue Apr 18 21:38:19 2023, name=くろグループ, description=亜jfkdjksjfかdl；fjdかsjf；あ)
2023/04/18 21:38:29 group_handler.go:24: /api/groups
2023/04/18 21:38:29 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/18 21:38:29 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/18 21:38:29 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/18 21:38:29 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/18 21:55:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:55:27 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 21:55:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:55:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:55:27 dialect.go:79: driver.Tx(66ee0436-13ae-4641-b86f-d122b324bdf7): started
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/18 21:55:27 dialect.go:79: Tx(66ee0436-13ae-4641-b86f-d122b324bdf7): committed
2023/04/18 21:55:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:57:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:57:03 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 21:57:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:57:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:57:03 dialect.go:79: driver.Tx(145faed2-1ebd-417a-b95b-f59ad43a6553): started
2023/04/18 21:57:03 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/18 21:57:03 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/18 21:57:03 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/18 21:57:03 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/18 21:57:03 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/18 21:57:03 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/18 21:57:03 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/18 21:57:04 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/18 21:57:04 dialect.go:79: Tx(145faed2-1ebd-417a-b95b-f59ad43a6553): committed
2023/04/18 21:57:04 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:58:26 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/18 21:58:26 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/18 21:58:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:58:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/18 21:58:27 dialect.go:79: driver.Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3): started
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/18 21:58:27 dialect.go:79: Tx(c2ca086d-6360-45e2-b64c-ec6ac67067d3): committed
2023/04/18 21:58:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:35:17 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:35:17 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/19 14:35:17 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:35:17 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:35:17 dialect.go:79: driver.Tx(86d93740-bd70-487f-882b-e1fd5bcb428f): started
2023/04/19 14:35:17 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/19 14:35:17 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/19 14:35:17 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/19 14:35:18 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/19 14:35:18 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/19 14:35:18 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/19 14:35:18 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/19 14:35:18 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/19 14:35:18 dialect.go:79: Tx(86d93740-bd70-487f-882b-e1fd5bcb428f): committed
2023/04/19 14:35:18 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:37:06 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:37:06 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/19 14:37:06 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:37:06 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:37:06 dialect.go:79: driver.Tx(31e90b01-0487-4b50-987c-454ac7d541c6): started
2023/04/19 14:37:06 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/19 14:37:06 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/19 14:37:07 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/19 14:37:07 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/19 14:37:07 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/19 14:37:07 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/19 14:37:07 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/19 14:37:07 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/19 14:37:07 dialect.go:79: Tx(31e90b01-0487-4b50-987c-454ac7d541c6): committed
2023/04/19 14:37:07 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:38:17 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:38:17 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/19 14:38:18 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:38:18 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:38:18 dialect.go:79: driver.Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07): started
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/19 14:38:18 dialect.go:79: Tx(3601a740-8bd5-4f6a-ab0e-bab9629ded07): committed
2023/04/19 14:38:18 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:41:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:41:03 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/19 14:41:04 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:41:04 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:41:04 dialect.go:79: driver.Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044): started
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/19 14:41:04 dialect.go:79: Tx(719fc2cf-85d6-456a-bb58-c8e5d1ce2044): committed
2023/04/19 14:41:04 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:41:07 group_handler.go:24: /api/groups
2023/04/19 14:41:07 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:41:07 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:41:07 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:41:07 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/19 14:44:33 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:44:33 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/19 14:44:33 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:44:33 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/19 14:44:33 dialect.go:79: driver.Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7): started
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7).Query: query=SHOW CREATE TABLE `app2`.`groups` args=[]
2023/04/19 14:44:33 dialect.go:79: Tx(9cf731a3-8bd9-49a3-acde-a169cb7260c7): committed
2023/04/19 14:44:33 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/19 14:47:35 group_handler.go:24: /api/groups
2023/04/19 14:47:35 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:47:35 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:47:35 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:47:35 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/19 14:47:36 group_handler.go:24: /api/groups
2023/04/19 14:47:36 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:47:36 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:47:36 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/19 14:47:36 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 02:18:29 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 02:18:29 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 02:18:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 02:18:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 02:18:29 dialect.go:79: driver.Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c): started
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 02:18:29 dialect.go:79: Tx(31d23cd3-4e48-4b3b-873f-873b561ca93c): committed
2023/04/20 02:18:29 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 02:21:58 group_handler.go:24: /api/groups
2023/04/20 02:21:58 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 02:21:58 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 02:21:58 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 02:21:58 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 02:59:57 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 02:59:57 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 02:59:57 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 02:59:57 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 02:59:57 dialect.go:79: driver.Tx(6e62c4f4-80fb-4836-8dac-dd28056da504): started
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 02:59:57 dialect.go:79: Tx(6e62c4f4-80fb-4836-8dac-dd28056da504): committed
2023/04/20 02:59:57 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:01:05 group_handler.go:24: /api/groups
2023/04/20 03:01:05 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:01:05 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:01:05 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:01:05 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:02:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:02:27 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:02:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:02:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:02:27 dialect.go:79: driver.Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51): started
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:02:27 dialect.go:79: Tx(e29c4376-1be5-4cff-af4b-7c61fd778b51): committed
2023/04/20 03:02:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:03:13 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:03:13 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:03:13 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:03:13 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:03:13 dialect.go:79: driver.Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa): started
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:03:13 dialect.go:79: Tx(3f8ae760-b640-45c6-8c6f-85f7d9aa76fa): committed
2023/04/20 03:03:13 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:03:16 group_handler.go:24: /api/groups
2023/04/20 03:03:16 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:03:16 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:03:16 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:03:16 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:08:29 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:08:29 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:08:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:08:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:08:29 dialect.go:79: driver.Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce): started
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:08:29 dialect.go:79: Tx(d59a6384-b29a-4cd3-ba34-dec7a5f2b3ce): committed
2023/04/20 03:08:29 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:08:35 group_handler.go:24: /api/groups
2023/04/20 03:08:35 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:08:35 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:08:35 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:08:35 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:10:16 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:10:16 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:10:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:10:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:10:16 dialect.go:79: driver.Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5): started
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:10:16 dialect.go:79: Tx(20471b85-b4e3-4a5b-8c9a-4a81f04f87b5): committed
2023/04/20 03:10:16 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:10:17 group_handler.go:24: /api/groups
2023/04/20 03:10:17 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:10:17 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:10:17 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:10:17 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:16:21 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:16:21 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:16:21 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:16:21 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:16:21 dialect.go:79: driver.Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042): started
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:16:21 dialect.go:79: Tx(59d0ecdb-ffbb-442e-931a-e6d9ed43f042): committed
2023/04/20 03:16:21 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:16:46 group_handler.go:24: /api/groups
2023/04/20 03:16:46 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:16:46 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:16:46 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:16:46 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:25:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:25:22 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:25:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:25:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:25:22 dialect.go:79: driver.Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039): started
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:25:22 dialect.go:79: Tx(e2ca471e-a63c-42b7-b186-8ad29dcb1039): committed
2023/04/20 03:25:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:25:42 group_handler.go:24: /api/groups
2023/04/20 03:25:42 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:25:42 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:25:42 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:25:42 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:27:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:27:25 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:27:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:27:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:27:25 dialect.go:79: driver.Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77): started
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:27:25 dialect.go:79: Tx(a18712a1-df79-486e-8cc9-1a30e42c0c77): committed
2023/04/20 03:27:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:27:37 group_handler.go:24: /api/groups
2023/04/20 03:27:37 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:27:37 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:27:37 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:27:37 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:30:19 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:30:19 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:30:19 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:30:19 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:30:19 dialect.go:79: driver.Tx(32485eb6-075c-4072-828e-a4b5cabaa818): started
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:30:19 dialect.go:79: Tx(32485eb6-075c-4072-828e-a4b5cabaa818): committed
2023/04/20 03:30:19 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:31:47 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:31:47 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:31:47 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:31:47 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:31:47 dialect.go:79: driver.Tx(53da256c-b507-41ca-a687-467a1ad3eb3d): started
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:31:47 dialect.go:79: Tx(53da256c-b507-41ca-a687-467a1ad3eb3d): committed
2023/04/20 03:31:47 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:31:49 group_handler.go:24: /api/groups
2023/04/20 03:31:49 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:31:49 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:31:49 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:31:49 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:33:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:33:25 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:33:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:33:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:33:25 dialect.go:79: driver.Tx(23fe018a-1188-4d06-a299-d7dbae332416): started
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:33:25 dialect.go:79: Tx(23fe018a-1188-4d06-a299-d7dbae332416): committed
2023/04/20 03:33:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:33:27 group_handler.go:24: /api/groups
2023/04/20 03:33:27 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:33:27 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:33:27 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:33:27 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:39:13 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:39:13 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:39:13 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:39:13 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:39:13 dialect.go:79: driver.Tx(ca87df8d-70cd-4079-8424-9c51dd364384): started
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:39:13 dialect.go:79: Tx(ca87df8d-70cd-4079-8424-9c51dd364384): committed
2023/04/20 03:39:13 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:39:22 group_handler.go:24: /api/groups
2023/04/20 03:39:22 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:39:22 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:39:22 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:39:22 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:50:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:50:27 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 03:50:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:50:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 03:50:27 dialect.go:79: driver.Tx(7247e111-665e-47e1-9f09-704046e9955c): started
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 03:50:27 dialect.go:79: Tx(7247e111-665e-47e1-9f09-704046e9955c): committed
2023/04/20 03:50:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 03:50:32 group_handler.go:24: /api/groups
2023/04/20 03:50:32 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:50:32 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:50:32 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:50:32 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 03:50:34 group_handler.go:24: /api/groups
2023/04/20 03:50:34 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:50:34 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:50:34 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 03:50:34 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 18:43:39 group_handler.go:24: /api/groups
2023/04/20 18:43:39 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 18:43:39 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 18:43:39 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 18:43:39 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 18:44:24 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 18:44:24 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 18:44:24 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 18:44:24 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 18:44:24 dialect.go:79: driver.Tx(4055d21e-ca80-4f34-a578-e27bed748791): started
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 18:44:24 dialect.go:79: Tx(4055d21e-ca80-4f34-a578-e27bed748791): committed
2023/04/20 18:44:24 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 18:44:53 group_handler.go:24: /api/groups
2023/04/20 18:44:53 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 18:44:53 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 18:44:53 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 18:44:53 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 21:13:06 group_handler.go:24: /api/groups
2023/04/20 21:13:06 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 21:13:06 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 21:13:06 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 21:13:06 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 21:15:32 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 21:15:32 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 21:15:32 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 21:15:32 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 21:15:32 dialect.go:79: driver.Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02): started
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 21:15:32 dialect.go:79: Tx(f3ba22cb-9b0f-42c9-9d9b-d0e000b12a02): committed
2023/04/20 21:15:32 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 21:16:49 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 21:16:49 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 21:16:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 21:16:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 21:16:49 dialect.go:79: driver.Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5): started
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 21:16:49 dialect.go:79: Tx(2c3b66ca-d5a4-4324-933c-d04ec228fda5): committed
2023/04/20 21:16:49 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 21:33:52 group_handler.go:24: /api/groups
2023/04/20 21:33:52 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 21:33:52 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 21:33:52 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 21:33:52 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 23:38:14 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 23:38:14 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 23:38:14 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 23:38:14 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 23:38:14 dialect.go:79: driver.Tx(083bb169-5514-4767-be3a-c242bd0d5178): started
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 23:38:14 dialect.go:79: Tx(083bb169-5514-4767-be3a-c242bd0d5178): committed
2023/04/20 23:38:14 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 23:38:49 group_handler.go:24: /api/groups
2023/04/20 23:38:49 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 23:38:49 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 23:38:49 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 23:38:49 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/20 23:40:07 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 23:40:07 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/20 23:40:07 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 23:40:07 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/20 23:40:07 dialect.go:79: driver.Tx(e221e8cb-b995-41b7-9bb3-889667f47808): started
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/20 23:40:07 dialect.go:79: Tx(e221e8cb-b995-41b7-9bb3-889667f47808): committed
2023/04/20 23:40:07 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/20 23:40:08 group_handler.go:24: /api/groups
2023/04/20 23:40:08 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/20 23:40:08 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/20 23:40:08 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/20 23:40:08 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/21 11:00:28 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:00:28 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 11:00:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:00:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:00:29 dialect.go:79: driver.Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46): started
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 11:00:29 dialect.go:79: Tx(574b7d5b-63f7-4a55-8ea6-f683daef3f46): committed
2023/04/21 11:00:29 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:06:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:06:25 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 11:06:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:06:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:06:25 dialect.go:79: driver.Tx(5980a217-6978-4b2a-8a81-5762e688183a): started
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 11:06:25 dialect.go:79: Tx(5980a217-6978-4b2a-8a81-5762e688183a): committed
2023/04/21 11:06:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:20:52 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:20:52 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 11:20:52 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:20:52 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:20:52 dialect.go:79: driver.Tx(29ef96de-05a6-4203-9d49-8f265d343c5c): started
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 11:20:52 dialect.go:79: Tx(29ef96de-05a6-4203-9d49-8f265d343c5c): committed
2023/04/21 11:20:52 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:27:29 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:27:29 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 11:27:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:27:29 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:27:29 dialect.go:79: driver.Tx(e2ec603b-0aff-4d89-988f-657eb62300fe): started
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 11:27:29 dialect.go:79: Tx(e2ec603b-0aff-4d89-988f-657eb62300fe): committed
2023/04/21 11:27:29 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:29:46 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:29:46 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 11:29:46 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:29:46 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:29:46 dialect.go:79: driver.Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c): started
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 11:29:46 dialect.go:79: Tx(96a7cb72-c89e-4c22-8259-0f19a2cc601c): committed
2023/04/21 11:29:46 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:41:38 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:41:38 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 11:41:38 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:41:38 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:41:38 dialect.go:79: driver.Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21): started
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 11:41:38 dialect.go:79: Tx(2feb36b2-491d-46d5-bbbd-e5d0c2e53e21): committed
2023/04/21 11:41:38 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:48:16 group_handler.go:24: /api/groups
2023/04/21 11:48:16 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:48:16 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 OFFSET -1 args=[%%]
2023/04/21 11:48:16 group_repository.go:35: failed fetching users: Error 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-1' at line 1
2023/04/21 11:48:16 group_handler.go:68: Error 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-1' at line 1
2023/04/21 11:56:45 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:56:45 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 11:56:45 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:56:46 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 11:56:46 dialect.go:79: driver.Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65): started
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 11:56:46 dialect.go:79: Tx(8a515a4f-8f9f-4c2d-b4b0-f4b7f2d03e65): committed
2023/04/21 11:56:46 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 11:56:53 group_handler.go:24: /api/groups
2023/04/21 11:56:53 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:56:53 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:56:53 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:56:53 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/21 11:58:35 group_handler.go:24: /api/groups
2023/04/21 11:58:35 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:58:35 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:58:35 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:58:35 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/21 11:59:51 group_handler.go:24: /api/groups
2023/04/21 11:59:51 group_handler.go:50: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:59:51 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:59:51 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/21 11:59:51 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/21 12:04:21 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 12:04:21 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 12:04:21 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 12:04:21 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 12:04:21 dialect.go:79: driver.Tx(00cd6f2e-55a1-4617-8e1a-22012597b102): started
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 12:04:21 dialect.go:79: Tx(00cd6f2e-55a1-4617-8e1a-22012597b102): committed
2023/04/21 12:04:21 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 12:11:40 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 12:11:40 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 12:11:40 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 12:11:40 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 12:11:40 dialect.go:79: driver.Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581): started
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 12:11:40 dialect.go:79: Tx(f0697d9b-3967-4d57-82ef-f9a6c3902581): committed
2023/04/21 12:11:40 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 12:12:11 group_handler.go:24: /api/groups
2023/04/21 12:12:11 group_handler.go:55: strconv.Atoi: parsing "": invalid syntax
2023/04/21 12:12:11 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/21 12:12:11 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 10 args=[%%]
2023/04/21 12:12:11 group_handler.go:73: returned value: [0x4000238ae0]
2023/04/21 12:13:41 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 12:13:41 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/21 12:13:41 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 12:13:41 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/21 12:13:41 dialect.go:79: driver.Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8): started
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/21 12:13:41 dialect.go:79: Tx(fd6dafcc-eded-4f8e-bbbf-3261669c88c8): committed
2023/04/21 12:13:41 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/21 12:13:43 group_handler.go:24: /api/groups
2023/04/21 12:13:43 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/21 12:13:43 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/21 12:13:43 group_handler.go:73: returned value: [0x400005e600]
2023/04/23 17:50:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 17:50:03 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 17:50:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 17:50:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 17:50:03 dialect.go:79: driver.Tx(4088427e-4433-44b2-a106-56e7f26c0895): started
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 17:50:03 dialect.go:79: Tx(4088427e-4433-44b2-a106-56e7f26c0895): committed
2023/04/23 17:50:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 17:52:33 group_handler.go:24: /api/groups
2023/04/23 17:52:33 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 17:52:33 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 17:52:33 group_handler.go:73: returned value: [0x40001fa720]
2023/04/23 18:25:00 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:25:00 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 18:25:00 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:25:00 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:25:00 dialect.go:79: driver.Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2): started
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 18:25:00 dialect.go:79: Tx(435364c4-15bf-41f4-821d-c60f22c5f4e2): committed
2023/04/23 18:25:00 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:25:16 group_handler.go:24: /api/groups
2023/04/23 18:25:16 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 18:25:16 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 18:25:16 group_handler.go:73: returned value: [0x400005e2a0]
2023/04/23 18:25:18 group_handler.go:24: /api/groups
2023/04/23 18:25:18 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 18:25:18 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 18:25:18 group_handler.go:73: returned value: [0x40001fca80]
2023/04/23 18:27:50 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:27:50 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 18:27:50 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:27:50 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:27:50 dialect.go:79: driver.Tx(bf6582d8-2806-49c1-a860-15be5359a611): started
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 18:27:50 dialect.go:79: Tx(bf6582d8-2806-49c1-a860-15be5359a611): committed
2023/04/23 18:27:50 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:27:56 group_handler.go:24: /api/groups
2023/04/23 18:27:56 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 18:27:56 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 18:27:56 group_handler.go:73: returned value: [0x4000238660]
2023/04/23 18:31:37 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:31:37 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 18:31:37 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:31:37 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:31:37 dialect.go:79: driver.Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9): started
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 18:31:37 dialect.go:79: Tx(7b96e9f2-c6e3-4a9c-846f-af3059638cb9): committed
2023/04/23 18:31:37 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:31:42 group_handler.go:24: /api/groups
2023/04/23 18:31:42 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 18:31:42 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 18:31:42 group_handler.go:73: returned value: [0x40001faae0]
2023/04/23 18:32:04 group_handler.go:24: /api/groups
2023/04/23 18:32:04 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 18:32:04 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 18:32:04 group_handler.go:73: returned value: [0x40001fab40]
2023/04/23 18:47:32 group_handler.go:24: /api/groups
2023/04/23 18:47:32 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 18:47:32 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 18:47:32 group_handler.go:73: returned value: [0x4000284480]
2023/04/23 18:48:16 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:48:16 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 18:48:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:48:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 18:48:16 dialect.go:79: driver.Tx(d1de21b5-4f3a-440e-97aa-7afea684cded): started
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 18:48:16 dialect.go:79: Tx(d1de21b5-4f3a-440e-97aa-7afea684cded): committed
2023/04/23 18:48:16 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 18:48:21 group_handler.go:24: /api/groups
2023/04/23 18:48:21 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 18:48:21 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 18:48:21 group_handler.go:73: returned value: [0x40001fc720]
2023/04/23 19:11:25 group_handler.go:24: /api/groups
2023/04/23 19:11:25 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 19:11:25 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 19:11:25 group_handler.go:73: returned value: [0x400005e7e0]
2023/04/23 19:12:11 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:12:11 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 19:12:11 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:12:11 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:12:11 dialect.go:79: driver.Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f): started
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 19:12:11 dialect.go:79: Tx(67c172b5-cc1f-4211-ac8d-b9998dd1073f): committed
2023/04/23 19:12:11 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:13:40 group_handler.go:24: /api/groups
2023/04/23 19:13:40 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 19:13:40 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 19:13:41 group_handler.go:73: returned value: [0x40001f8780]
2023/04/23 19:23:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:23:22 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 19:23:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:23:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:23:22 dialect.go:79: driver.Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6): started
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 19:23:22 dialect.go:79: Tx(4026bbeb-b726-4aac-9076-b0012b5dbac6): committed
2023/04/23 19:23:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:25:12 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:25:12 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 19:25:12 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:25:12 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:25:12 dialect.go:79: driver.Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6): started
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 19:25:12 dialect.go:79: Tx(c99bc4ec-c8e2-4d6a-a3b9-df0bb7ff1ad6): committed
2023/04/23 19:25:12 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:30:18 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:30:18 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 19:30:18 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:30:18 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:30:18 dialect.go:79: driver.Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab): started
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 19:30:18 dialect.go:79: Tx(a375c112-bbf5-4fde-8b79-4695fb95ebab): committed
2023/04/23 19:30:18 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:36:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 19:36:22 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 19:36:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:36:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 19:36:22 dialect.go:79: driver.Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e): started
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 19:36:22 dialect.go:79: Tx(6c1fced5-a4a4-41e7-ac16-f5d329efb73e): committed
2023/04/23 19:36:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 20:03:12 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 20:03:12 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 20:03:12 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 20:03:12 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 20:03:12 dialect.go:79: driver.Tx(67d8011c-e067-4d49-a60b-280dbb59d216): started
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 20:03:12 dialect.go:79: Tx(67d8011c-e067-4d49-a60b-280dbb59d216): committed
2023/04/23 20:03:12 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 23:09:40 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 23:09:40 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 23:09:40 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 23:09:40 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 23:09:40 dialect.go:79: driver.Tx(43343fab-3c08-439f-92bb-4dfb0767aae8): started
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 23:09:40 dialect.go:79: Tx(43343fab-3c08-439f-92bb-4dfb0767aae8): committed
2023/04/23 23:09:40 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 23:16:42 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 23:16:42 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/23 23:16:42 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 23:16:42 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/23 23:16:42 dialect.go:79: driver.Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748): started
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/23 23:16:42 dialect.go:79: Tx(afd4d1e4-9fdf-481e-80fd-916588d6f748): committed
2023/04/23 23:16:42 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/23 23:17:12 group_handler.go:24: /api/groups
2023/04/23 23:17:12 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 23:17:12 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 23:17:12 group_handler.go:73: returned value: [0x4000096180]
2023/04/23 23:17:33 group_handler.go:24: /api/groups
2023/04/23 23:17:33 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/23 23:17:33 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/23 23:17:33 group_handler.go:73: returned value: [0x4000238c00]
2023/04/24 00:11:52 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 00:11:52 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 00:11:52 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:11:52 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:11:52 dialect.go:79: driver.Tx(0988a7dd-0164-4537-bfe1-109c050dda70): started
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 00:11:52 dialect.go:79: Tx(0988a7dd-0164-4537-bfe1-109c050dda70): committed
2023/04/24 00:11:52 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 00:13:45 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 00:13:45 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 00:13:45 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:13:45 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:13:45 dialect.go:79: driver.Tx(d19726fc-0c59-4f49-9893-bace7a74a641): started
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 00:13:45 dialect.go:79: Tx(d19726fc-0c59-4f49-9893-bace7a74a641): committed
2023/04/24 00:13:45 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 00:17:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 00:17:03 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 00:17:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:17:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:17:03 dialect.go:79: driver.Tx(15ce35cd-94b3-4a34-86ef-13241eb62500): started
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 00:17:03 dialect.go:79: Tx(15ce35cd-94b3-4a34-86ef-13241eb62500): committed
2023/04/24 00:17:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 00:27:49 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 00:27:49 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 00:27:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:27:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 00:27:49 dialect.go:79: driver.Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165): started
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 00:27:49 dialect.go:79: Tx(6a22a8b5-1e8c-416d-8337-09b5fc8fe165): committed
2023/04/24 00:27:49 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 01:12:20 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 01:12:20 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 01:12:21 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 01:12:21 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 01:12:21 dialect.go:79: driver.Tx(08dd8602-b15b-4791-96d4-37fb42451d40): started
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 01:12:21 dialect.go:79: Tx(08dd8602-b15b-4791-96d4-37fb42451d40): committed
2023/04/24 01:12:21 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 10:25:40 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 10:25:40 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 10:25:41 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 10:25:41 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 10:25:41 dialect.go:79: driver.Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162): started
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 10:25:41 dialect.go:79: Tx(e61d16f8-3e9b-4838-bd3d-5acc71f65162): committed
2023/04/24 10:25:41 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 10:55:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 10:55:25 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 10:55:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 10:55:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 10:55:25 dialect.go:79: driver.Tx(490612fe-103e-4481-adee-5ff857ea230d): started
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 10:55:25 dialect.go:79: Tx(490612fe-103e-4481-adee-5ff857ea230d): committed
2023/04/24 10:55:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:09:37 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:09:37 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 12:09:37 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:09:37 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:09:37 dialect.go:79: driver.Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17): started
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 12:09:37 dialect.go:79: Tx(3ea6980d-91db-4f3b-a3c2-9e2051f04e17): committed
2023/04/24 12:09:37 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:38:55 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:38:55 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 12:38:55 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:38:55 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:38:55 dialect.go:79: driver.Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac): started
2023/04/24 12:38:55 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 12:38:55 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 12:38:55 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 12:38:56 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 12:38:56 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 12:38:56 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 12:38:56 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 12:38:56 dialect.go:79: Tx(a6d312b2-97d5-47ea-9e81-ec31a9c6c2ac): committed
2023/04/24 12:38:56 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:41:14 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:41:14 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 12:41:14 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:41:14 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:41:14 dialect.go:79: driver.Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438): started
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 12:41:14 dialect.go:79: Tx(f0bede8b-5dbb-42aa-9d66-2b9627f26438): committed
2023/04/24 12:41:14 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:44:11 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 12:44:11 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 12:44:11 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:44:11 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 12:44:11 dialect.go:79: driver.Tx(37d39023-6965-4a3f-982f-666d65aef7a1): started
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 12:44:11 dialect.go:79: Tx(37d39023-6965-4a3f-982f-666d65aef7a1): committed
2023/04/24 12:44:11 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:05:18 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:05:18 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 13:05:19 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:05:19 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:05:19 dialect.go:79: driver.Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b): started
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 13:05:19 dialect.go:79: Tx(b0a1e792-889e-46a0-86e2-ad4964d8934b): committed
2023/04/24 13:05:19 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:23:49 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:23:49 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 13:23:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:23:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:23:49 dialect.go:79: driver.Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1): started
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 13:23:49 dialect.go:79: Tx(776ffb09-1f01-467b-a9fe-6eaf47f052c1): committed
2023/04/24 13:23:49 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:30:48 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:30:48 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 13:30:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:30:49 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:30:49 dialect.go:79: driver.Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336): started
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 13:30:49 dialect.go:79: Tx(8c5b4011-9be5-4e1f-8acc-95ef56ce1336): committed
2023/04/24 13:30:49 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:34:08 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:34:08 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 13:34:08 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:34:08 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:34:08 dialect.go:79: driver.Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf): started
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 13:34:08 dialect.go:79: Tx(31a10b55-2af4-4e89-ad7e-d3f6a75f3adf): committed
2023/04/24 13:34:08 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:39:23 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 13:39:23 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 13:39:23 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:39:23 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 13:39:23 dialect.go:79: driver.Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6): started
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 13:39:23 dialect.go:79: Tx(7f058885-a819-48c8-91a4-6efcb34f5ee6): committed
2023/04/24 13:39:23 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:19:36 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:19:36 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 14:19:36 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:19:36 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:19:36 dialect.go:79: driver.Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1): started
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 14:19:36 dialect.go:79: Tx(a83b37f5-67d7-4889-bbd1-fdd04900c8a1): committed
2023/04/24 14:19:36 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:21:10 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:21:10 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 14:21:10 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:21:10 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:21:10 dialect.go:79: driver.Tx(1971472d-74e1-4063-91a5-8043dba06ce8): started
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 14:21:10 dialect.go:79: Tx(1971472d-74e1-4063-91a5-8043dba06ce8): committed
2023/04/24 14:21:10 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:34:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:34:27 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 14:34:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:34:27 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:34:27 dialect.go:79: driver.Tx(133925bb-ea75-465a-b631-cc057e2d0e0f): started
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 14:34:27 dialect.go:79: Tx(133925bb-ea75-465a-b631-cc057e2d0e0f): committed
2023/04/24 14:34:27 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:40:15 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:40:15 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 14:40:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:40:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:40:16 dialect.go:79: driver.Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e): started
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 14:40:16 dialect.go:79: Tx(d2d70c0e-91be-4031-b9f4-65e5b817875e): committed
2023/04/24 14:40:16 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:42:35 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 14:42:35 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/24 14:42:35 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:42:35 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/24 14:42:35 dialect.go:79: driver.Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359): started
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/24 14:42:35 dialect.go:79: Tx(1e2d459f-1ab4-4dd5-997f-58856d2c6359): committed
2023/04/24 14:42:35 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/24 15:42:29 group_handler.go:24: /api/groups
2023/04/24 15:42:29 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/24 15:42:29 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/24 15:42:29 group_handler.go:73: returned value: [0x40003b4120]
2023/04/26 12:15:31 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 12:15:31 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 12:15:32 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 12:15:32 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 12:15:32 dialect.go:79: driver.Tx(21967872-ab01-4135-833f-5bde7c1d30ef): started
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 12:15:32 dialect.go:79: Tx(21967872-ab01-4135-833f-5bde7c1d30ef): committed
2023/04/26 12:15:32 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 12:18:22 group_handler.go:24: /api/groups
2023/04/26 12:18:22 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/26 12:18:22 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/26 12:18:22 group_handler.go:73: returned value: [0x400005e240]
2023/04/26 12:26:04 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 12:26:04 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 12:26:04 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 12:26:04 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 12:26:04 dialect.go:79: driver.Tx(0c9bc76e-a04a-43bf-b115-43478faa8681): started
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 12:26:04 dialect.go:79: Tx(0c9bc76e-a04a-43bf-b115-43478faa8681): committed
2023/04/26 12:26:04 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 14:00:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 14:00:25 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 14:00:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 14:00:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 14:00:25 dialect.go:79: driver.Tx(ef563d03-34f4-41e7-b464-41065992d2ff): started
2023/04/26 14:00:25 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 14:00:25 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 14:00:26 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 14:00:26 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 14:00:26 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 14:00:26 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 14:00:26 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 14:00:26 dialect.go:79: Tx(ef563d03-34f4-41e7-b464-41065992d2ff): committed
2023/04/26 14:00:26 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 17:26:00 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 17:26:00 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 17:26:00 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 17:26:00 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 17:26:00 dialect.go:79: driver.Tx(c92e9098-3fd7-4ef1-9640-026533880abd): started
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 17:26:00 dialect.go:79: Tx(c92e9098-3fd7-4ef1-9640-026533880abd): committed
2023/04/26 17:26:00 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:50:00 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:50:00 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 18:50:00 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:50:00 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:50:00 dialect.go:79: driver.Tx(60cf26fa-6e24-435d-96ec-abf426625ab9): started
2023/04/26 18:50:00 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 18:50:00 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 18:50:00 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 18:50:00 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 18:50:00 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 18:50:00 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 18:50:00 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 18:50:01 dialect.go:79: Tx(60cf26fa-6e24-435d-96ec-abf426625ab9): committed
2023/04/26 18:50:01 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:52:17 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:52:17 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 18:52:18 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:52:18 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:52:18 dialect.go:79: driver.Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6): started
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 18:52:18 dialect.go:79: Tx(b6e8989a-92e1-4b08-a984-089bfbd3fda6): committed
2023/04/26 18:52:18 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:57:02 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:57:02 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 18:57:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:57:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:57:03 dialect.go:79: driver.Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877): started
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 18:57:03 dialect.go:79: Tx(e8e4ffd1-2b6b-4773-b294-44cd34836877): committed
2023/04/26 18:57:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:58:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 18:58:03 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 18:58:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:58:03 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 18:58:03 dialect.go:79: driver.Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110): started
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 18:58:03 dialect.go:79: Tx(6beae0fb-f11a-4ce2-a624-c8706a1ad110): committed
2023/04/26 18:58:03 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:02:30 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:02:30 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 19:02:30 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:02:30 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:02:30 dialect.go:79: driver.Tx(e5316e15-ff56-41e6-a44d-090388034184): started
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 19:02:30 dialect.go:79: Tx(e5316e15-ff56-41e6-a44d-090388034184): committed
2023/04/26 19:02:30 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:10:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:10:22 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 19:10:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:10:22 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:10:22 dialect.go:79: driver.Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701): started
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 19:10:22 dialect.go:79: Tx(4ddba5ab-660d-4e3d-a31b-8a6b9ee85701): committed
2023/04/26 19:10:22 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:11:08 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:11:08 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 19:11:08 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:11:08 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:11:08 dialect.go:79: driver.Tx(3aef4aa8-83ad-4d69-9087-ae3636499728): started
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 19:11:08 dialect.go:79: Tx(3aef4aa8-83ad-4d69-9087-ae3636499728): committed
2023/04/26 19:11:08 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:13:15 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:13:15 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/26 19:13:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:13:16 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/26 19:13:16 dialect.go:79: driver.Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5): started
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/26 19:13:16 dialect.go:79: Tx(75360e79-6619-4a0e-bae0-d8a2cdda31b5): committed
2023/04/26 19:13:16 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/26 19:18:40 group_handler.go:24: /api/groups
2023/04/26 19:18:40 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/26 19:18:40 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/26 19:18:40 group_handler.go:73: returned value: [0x40002846c0]
2023/04/27 11:10:53 group_handler.go:24: /api/groups
2023/04/27 11:10:53 group_handler.go:146: json: cannot unmarshal array into Go struct field Group.description of type string
2023/04/27 11:17:43 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/27 11:17:43 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/27 11:17:43 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/27 11:17:43 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/27 11:17:43 dialect.go:79: driver.Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389): started
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/27 11:17:43 dialect.go:79: Tx(8e3aa710-2e09-45c3-9c95-fbd5f3c4a389): committed
2023/04/27 11:17:43 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/27 12:34:48 group_handler.go:24: /api/groups
2023/04/27 12:34:48 dialect.go:79: driver.Exec: query=INSERT INTO `groups` (`created_at`, `updated_at`, `name`, `description`) VALUES (?, ?, ?, ?) args=[2023-04-27 12:34:48.839777221 +0900 JST m=+4388.086034546 2023-04-27 12:34:48.839777846 +0900 JST m=+4388.086035088 グループ input触ってみました]
2023/04/27 12:34:48 group_repository.go:80: user was created: Group(id=2, created_at=Thu Apr 27 12:34:48 2023, updated_at=Thu Apr 27 12:34:48 2023, name=グループ, description=input触ってみました)
2023/04/27 12:34:49 group_handler.go:24: /api/groups
2023/04/27 12:34:49 dialect.go:79: driver.Exec: query=INSERT INTO `groups` (`created_at`, `updated_at`, `name`, `description`) VALUES (?, ?, ?, ?) args=[2023-04-27 12:34:49.136772471 +0900 JST m=+4388.383029755 2023-04-27 12:34:49.13677293 +0900 JST m=+4388.383030213 グループ input触ってみました]
2023/04/27 12:34:49 group_repository.go:80: user was created: Group(id=3, created_at=Thu Apr 27 12:34:49 2023, updated_at=Thu Apr 27 12:34:49 2023, name=グループ, description=input触ってみました)
2023/04/27 15:59:24 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/27 15:59:24 mysql.go:81: default migration name is used. Use: 'go run -mod=mod ent/migrate/main.go <name>'
2023/04/27 15:59:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/27 15:59:25 dialect.go:79: driver.Query: query=SHOW VARIABLES LIKE 'version' args=[]
2023/04/27 15:59:25 dialect.go:79: driver.Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8): started
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8).Query: query=SELECT @@version, @@collation_server, @@character_set_server, @@lower_case_table_names args=[]
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8).Query: query=SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME`, `DEFAULT_COLLATION_NAME` from `INFORMATION_SCHEMA`.`SCHEMATA` WHERE `SCHEMA_NAME` = SCHEMA() ORDER BY `SCHEMA_NAME` args=[]
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8).Query: query=
SELECT
	t1.TABLE_SCHEMA,
	t1.TABLE_NAME,
	t2.CHARACTER_SET_NAME,
	t1.TABLE_COLLATION,
	t1.AUTO_INCREMENT,
	t1.TABLE_COMMENT,
	t1.CREATE_OPTIONS
FROM
	INFORMATION_SCHEMA.TABLES AS t1
	JOIN INFORMATION_SCHEMA.COLLATIONS AS t2
	ON t1.TABLE_COLLATION = t2.COLLATION_NAME
WHERE
	TABLE_SCHEMA IN (?)
	AND TABLE_NAME IN (?)
	AND TABLE_TYPE = 'BASE TABLE'
ORDER BY
	TABLE_SCHEMA, TABLE_NAME
 args=[app2 groups]
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8).Query: query=SELECT `TABLE_NAME`, `COLUMN_NAME`, `COLUMN_TYPE`, `COLUMN_COMMENT`, `IS_NULLABLE`, `COLUMN_KEY`, `COLUMN_DEFAULT`, `EXTRA`, `CHARACTER_SET_NAME`, `COLLATION_NAME`, `GENERATION_EXPRESSION` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `ORDINAL_POSITION` args=[app2 groups]
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8).Query: query=SELECT `TABLE_NAME`, `INDEX_NAME`, `COLUMN_NAME`, `NON_UNIQUE`, `SEQ_IN_INDEX`, `INDEX_TYPE`, UPPER(`COLLATION`) = 'D' AS `DESC`, `INDEX_COMMENT`, `SUB_PART`, `EXPRESSION` FROM `INFORMATION_SCHEMA`.`STATISTICS` WHERE `TABLE_SCHEMA` = ? AND `TABLE_NAME` IN (?) ORDER BY `index_name`, `seq_in_index` args=[app2 groups]
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8).Query: query=
SELECT
	t1.CONSTRAINT_NAME,
	t1.TABLE_NAME,
	t1.COLUMN_NAME,
	t1.TABLE_SCHEMA,
	t1.REFERENCED_TABLE_NAME,
	t1.REFERENCED_COLUMN_NAME,
	t1.REFERENCED_TABLE_SCHEMA,
	t3.UPDATE_RULE,
	t3.DELETE_RULE
FROM
	INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS t1
	JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t2
	JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS t3
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_NAME = t3.CONSTRAINT_NAME
	AND t1.TABLE_SCHEMA = t2.TABLE_SCHEMA
	AND t1.TABLE_SCHEMA = t3.CONSTRAINT_SCHEMA
WHERE
	t2.CONSTRAINT_TYPE = 'FOREIGN KEY'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME,
	t1.ORDINAL_POSITION args=[app2 groups]
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8).Query: query=SELECT t1.TABLE_NAME, t1.CONSTRAINT_NAME, t2.CHECK_CLAUSE, t1.ENFORCED
FROM
	INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS t1
	JOIN INFORMATION_SCHEMA.CHECK_CONSTRAINTS AS t2
	ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
	AND t1.CONSTRAINT_SCHEMA = t2.CONSTRAINT_SCHEMA
WHERE
	t1.CONSTRAINT_TYPE = 'CHECK'
	AND t1.TABLE_SCHEMA = ?
	AND t1.TABLE_NAME IN (?)
ORDER BY
	t1.CONSTRAINT_NAME
 args=[app2 groups]
2023/04/27 15:59:25 dialect.go:79: Tx(cc26767c-3cd5-41b2-b6b5-26b7b5b49ab8): committed
2023/04/27 15:59:25 mysql.go:37: successfully connected to mysql :root:root@tcp(mysql:3306)/app2?charset=utf8mb4&parseTime=True
2023/04/27 16:00:58 group_handler.go:24: /api/groups
2023/04/27 16:00:58 dialect.go:79: driver.Exec: query=INSERT INTO `groups` (`created_at`, `updated_at`, `name`, `description`) VALUES (?, ?, ?, ?) args=[2023-04-27 16:00:58.552259585 +0900 JST m=+93.747689586 2023-04-27 16:00:58.55225971 +0900 JST m=+93.747689711 グループ input触ってみました]
2023/04/27 16:00:58 group_repository.go:80: user was created: Group(id=4, created_at=Thu Apr 27 16:00:58 2023, updated_at=Thu Apr 27 16:00:58 2023, name=グループ, description=input触ってみました)
2023/04/27 16:01:02 group_handler.go:24: /api/groups
2023/04/27 16:01:02 group_handler.go:61: strconv.Atoi: parsing "": invalid syntax
2023/04/27 16:01:02 dialect.go:79: driver.Query: query=SELECT `groups`.`id`, `groups`.`created_at`, `groups`.`updated_at`, `groups`.`name`, `groups`.`description` FROM `groups` WHERE `groups`.`name` LIKE ? ORDER BY `groups`.`updated_at` DESC LIMIT 20 args=[%%]
2023/04/27 16:01:02 group_handler.go:73: returned value: [0x4000284420 0x4000284480 0x40002844e0 0x4000284540]
